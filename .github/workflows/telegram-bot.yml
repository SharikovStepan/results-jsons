name: Telegram JSON Processor

on:
  repository_dispatch:
    types: [telegram_file]

jobs:
  process_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Process file
        id: process_file
        run: |
          # Устанавливаем инструменты
          sudo apt-get install -y jq

          # Получаем данные из вебхука
          RAW_CONTENT='${{ toJson(github.event.client_payload.file_content) }}'
          CLEAN_CONTENT=$(echo "$RAW_CONTENT" | sed 's/\\"/"/g' | sed 's/^"\|"$//g')
          
          # Извлекаем метаданные
          CAPTION=$(echo "$CLEAN_CONTENT" | jq -r '.message.caption // "file"')
          FILE_ID=$(echo "$CLEAN_CONTENT" | jq -r '.message.document.file_id')
          ORIG_NAME=$(echo "$CLEAN_CONTENT" | jq -r '.message.document.file_name')

          # Скачиваем файл
          FILE_PATH=$(curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/getFile?file_id=$FILE_ID" | jq -r '.result.file_path')
          curl -s -o "temp.json" "https://api.telegram.org/file/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/$FILE_PATH"

          # Определяем источник даты
          DATETIME_SOURCE="текущее время"
          DATETIME=$(date +"%Y-%m-%d_%H-%M")  # Без секунд

          # Пытаемся извлечь дату из содержимого JSON
          JSON_DATETIME=$(jq -r '
            [.heats | to_entries[] | 
              .value.rounds | to_entries[] | 
              .value.start_time_formatted
            ] | first // "null"' "temp.json")
          
          if [ "$JSON_DATETIME" != "null" ]; then
            # Форматируем дату без секунд и миллисекунд
            DATETIME=$(echo "$JSON_DATETIME" | 
                      sed -E 's/([0-9]{4}-[0-9]{2}-[0-9]{2}) ([0-9]{2}:[0-9]{2}):[0-9]{2}(\.[0-9]+)?/\1_\2/' |
                      sed 's/:/-/g')
            DATETIME_SOURCE="JSON файл"
          else
            # Пробуем извлечь из имени файла (без секунд)
            if [[ "$ORIG_NAME" =~ RotorHazard_Export_([0-9]{4})([0-9]{2})([0-9]{2})_([0-9]{2})([0-9]{2}) ]]; then
              DATETIME="${BASH_REMATCH[1]}-${BASH_REMATCH[2]}-${BASH_REMATCH[3]}_${BASH_REMATCH[4]}-${BASH_REMATCH[5]}"
              DATETIME_SOURCE="имя файла"
            fi
          fi

          # Формируем имя файла (гарантированно без секунд)
          CLEAN_DATETIME=$(echo "$DATETIME" | sed 's/_[0-9][0-9]-[0-9][0-9]$//' | sed 's/_[0-9][0-9]$//')
          NEW_FILENAME="${CAPTION}_${CLEAN_DATETIME}.json"
          
          # Сохраняем файл
          mkdir -p results.jsons
          mv "temp.json" "results.jsons/$NEW_FILENAME"

          # Формируем сообщение для Telegram (без секунд)
          DISPLAY_DATETIME=$(echo "$CLEAN_DATETIME" | sed 's/_/ /')
          MESSAGE="✅ Файл успешно сохранён!
Имя: $NEW_FILENAME
Дата: $DISPLAY_DATETIME
Источник даты: $DATETIME_SOURCE"

          echo "FILE_NAME=$NEW_FILENAME" >> $GITHUB_OUTPUT
          echo "FILE_PATH=results.jsons/$NEW_FILENAME" >> $GITHUB_OUTPUT
          echo "DATETIME_SOURCE=$DATETIME_SOURCE" >> $GITHUB_OUTPUT
          echo "MESSAGE<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Commit and push
        run: |
          git config --global user.name "Telegram Bot"
          git config --global user.email "bot@github.com"
          git add .
          git commit -m "Add ${{ steps.process_file.outputs.FILE_NAME }}"
          git push

      - name: Notify user
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: ${{ steps.process_file.outputs.MESSAGE }}
