name: Telegram JSON Processor

on:
  repository_dispatch:
    types: [telegram_file]

jobs:
  process_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Process incoming file
        id: process_file
        run: |
          # Получаем чистый JSON без двойного экранирования
          FILE_CONTENT='${{ toJson(github.event.client_payload.file_content) }}'
          echo "Raw content: $FILE_CONTENT"
          
          # Парсим данные (используем jq с флагом -r для raw-вывода)
          FILE_NAME=$(echo "$FILE_CONTENT" | jq -r '.message.document.file_name')
          CAPTION=$(echo "$FILE_CONTENT" | jq -r '.message.caption // "uploaded"')
          FILE_ID=$(echo "$FILE_CONTENT" | jq -r '.message.document.file_id')
          
          # Скачиваем файл напрямую из Telegram
          FILE_URL="https://api.telegram.org/file/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/$FILE_ID"
          curl -s -o "$FILE_NAME" "$FILE_URL"
          
          # Генерируем новое имя файла
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          NEW_FILENAME="${CAPTION}_${TIMESTAMP}.json"
          
          # Сохраняем файл
          mkdir -p results.jsons
          mv "$FILE_NAME" "results.jsons/$NEW_FILENAME"
          
          # Передаем данные между шагами
          echo "FILE_NAME=$NEW_FILENAME" >> $GITHUB_OUTPUT
          echo "FILE_PATH=results.jsons/$NEW_FILENAME" >> $GITHUB_OUTPUT

      - name: Commit and push
        run: |
          git config --global user.name "Telegram Bot"
          git config --global user.email "bot@github.com"
          git add .
          git commit -m "Add ${{ steps.process_file.outputs.FILE_NAME }}"
          git push

      - name: Notify user
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            Файл успешно сохранён!
            Имя: ${{ steps.process_file.outputs.FILE_NAME }}
            Путь: ${{ steps.process_file.outputs.FILE_PATH }}
